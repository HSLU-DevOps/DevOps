version: "3.9"
services:
  grafana:
    image: grafana/grafana:9.1.7
    configs:
      - source: grafana-datasources
        target: /etc/grafana/provisioning/datasources/datasources.yml
    deploy:
      mode: replicated
      placement:
        constraints:
          - node.labels.volumes==true
      replicas: 1
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    networks:
      - logs
      - metrics
    ports:
      - "3000:3000"
    volumes:
      - grafana:/var/lib/grafana

  loki:
    image: grafana/loki:3.3.1
    command:
      - '-config.file=/etc/loki/local-config.yaml'
    deploy:
      mode: replicated
      placement:
        constraints:
          - node.labels.volumes==true
      replicas: 1
    networks:
      - logs
    volumes:
      - loki:/loki

  prometheus:
    image: prom/prometheus:v3.0.1
    configs:
      - source: prometheus-config
        target: /etc/prometheus/prometheus.yml
    deploy:
      mode: replicated
      placement:
        constraints:
          - node.labels.volumes==true
      replicas: 1
    networks:
      - metrics
    ports:
      - "9090:9090"
    user: root
    volumes:
      - prometheus:/prometheus
      - /var/run/docker.sock:/var/run/docker.sock

  promtail:
    image: grafana/promtail:3.3.1
    command:
      - '-config.file=/etc/promtail/config.yml'
    configs:
      - source: promtail-config
        target: /etc/promtail/config.yml
    deploy:
      mode: global
    networks:
      - logs
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

configs:
  grafana-datasources:
    external: true
    name: ${INFRA_CONFIGS_DATASOURCES}
  prometheus-config:
    external: true
    name: ${INFRA_CONFIGS_PROMETHEUS}
  promtail-config:
    external: true
    name: ${INFRA_CONFIGS_PROMTAIL}

networks:
  logs:
  metrics:

volumes:
  grafana:
  loki:
  prometheus:
